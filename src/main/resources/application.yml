server:
  port: 4000

spring:
  # 레디스 설정
  data:
    redis:
      host: ${redis.host}
      port: ${redis.port}
  mail:
    host: smtp.gmail.com # SMTP 서버 호스트
    port: 587 # SMTP 서버 포트
    username: ${mail.username} # 이메일 아이디, 주소가 test@gmail.com이면 test
    password: ${mail.password} # 앱 비밀번호
    properties:
      mail:
        smtp:
          auth: true # 사용자 인증 시도 여부 - 기본값 false
          timeout: 5000 # Socket Read Timeout 시간(ms) - 기본값 : 무한대
          starttls:
            enable: true # StartTLS 활성화 여부 - 기본값 false

  # 데이터베이스 설정
  datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${db.url}
    username: ${db.username}
    password: ${db.password}

  # JPA 설정
  jpa:
    properties:
      hibernate:
        show_sql: true          # 실행되는 SQL 출력
        format_sql: true        # SQL을 예쁘게 포맷
        use_sql_comments: true  # 주석 출력
    hibernate:
      ddlAuto: ${ddl.auto}      # 스키마 자동 생성 전략 (create-실행 시마다 새로 생성, update-변경사항만 반영, none-자동 변경 없음)

  # 파일 업로드 용량 설정
  servlet:
    multipart:
      maxFileSize: 20MB         # 단일 파일 최대 크기
      maxRequestSize: 60MB      # 요청 전체 크기
      fileSizeThreshold: 30MB   # 임시 파일로 전환되는 기준 크기

# 로그 설정
logging:
  level:
    org.hibernate.type: trace
    org.hibernate.orm.jdbc.bind: trace


# 파일 업로드 경로 설정
file:
  upload:
    url: ${file.url}
    path: ${file.path}

# OPEN DOC API 설정
springdoc:
  version: '1.0.0'
  api-docs:
    path: /api-docs
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  swagger-ui:
    operations-sorter: alpha
    tags-sorter: alpha
    path: /api-docs.html        # Swagger UI 접속 경로
    disable-swagger-default-url: true
    doc-expansion: none
  paths-to-match:
    - /api/v1/**                # 해당 경로의 API만 문서화

# JWT 설정

member:
  jwt:
    secret: ${jwt.secret}       # 로그인 시 발급되는 JWT 토큰의 비밀키
    validtime: ${jwt.validTime} # 토큰 유효 시간 (ms)

# 외부 API 서버 주소
api:
  server.url: ${api.url}